apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubevscan.fullname" . }}
  labels:
    {{- include "kubevscan.labels" . | nindent 4 }}
  name: {{ .Values.appName }}-prod
  namespace: {{ .Values.namespace }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "kubevscan.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "kubevscan.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - command:
        - entrypoint.sh
        env:
        - name: TLS_CERT_FILE
          value: /var/lib/secrets/sidecar-injector.crt
        - name: TLS_KEY_FILE
          value: /var/lib/secrets/sidecar-injector.key
        - name: LOG_LEVEL
          value: "2"
        - name: CONFIG_DIR
          value: conf/
        - name: CONFIGMAP_LABELS
          value: app={{ .Values.appName }}  
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: https
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        name: {{ .Values.appName }}
        securityContext: {}
        ports:
        - containerPort: 9443
          name: https
          protocol: TCP
        - containerPort: 9000
          name: http-metrics
          protocol: TCP
        resources:
            {{- toYaml .Values.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/secrets
          name: secrets
      dnsPolicy: {{ .Values.pod.dnsPolicy }}
      restartPolicy: {{ .Values.pod.restartPolicy }}
      schedulerName: {{ .Values.pod.schedulerName }}
      securityContext: {}
      serviceAccount: {{ .Values.appName }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: secrets
          secret:
            defaultMode: {{ .Values.secret.defaultMode }}
            secretName:  {{ .Values.secret.secretName }}
status: {}